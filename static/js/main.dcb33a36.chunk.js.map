{"version":3,"sources":["Weather.jsx","index.js"],"names":["Weather","useState","weather","setWeather","getWeather","a","process","fetch","res","json","console","log","useEffect","className","toUpperCase","description","src","icon","alt","main","temp","feels_like","humidity","wind","speed","placeholder","ReactDOM","render","document","getElementById"],"mappings":"iMA6DeA,G,MAxDC,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,KAEdC,EAAU,uCAAG,8BAAAC,EAAA,4DAEHC,mCAFG,SAGDC,MAAM,qDAAD,OAPd,UAOc,yCADPD,qCAFG,cAGbE,EAHa,gBAQGA,EAAIC,OARP,OAQbP,EARa,OASjBC,EAAWD,GACXQ,QAAQC,IAAIT,GAVK,2CAAH,qDAkBhB,OALAU,qBAAU,WAER,OADAR,IACO,eACN,IAGD,oCACE,yBAAKS,UAAU,cACb,yBAAKA,UAAU,qBACb,oCACE,yBAAKA,UAAU,QA3BhB,UA2B6BC,eAC3BZ,EAAQA,SACP,oCACE,6BAAMA,EAAQA,QAAQ,GAAGa,YAAYD,eACrC,yBACEE,IAAG,2CAAsCd,EAAQA,QAAQ,GAAGe,KAAzD,WACHC,IAAI,kBAIThB,EAAQiB,MAAQ,yBAAKN,UAAU,gBAAgBX,EAAQiB,KAAKC,KAA5C,QAIrB,yBAAKP,UAAU,0BACb,oCACGX,EAAQiB,MACP,oCACE,4CAAkBjB,EAAQiB,KAAKE,WAA/B,MACA,0CAAgBnB,EAAQiB,KAAKG,SAA7B,OAGHpB,EAAQqB,MAAQ,4CAAkBrB,EAAQqB,KAAKC,MAA/B,UAGrB,2BAAOX,UAAU,GAAGY,YAAY,+BClDxCC,IAASC,OACL,kBAAC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.dcb33a36.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\n\r\nlet city = \"Chicago\";\r\n//create functional component\r\nconst Weather = () => {\r\n  const [weather, setWeather] = useState([]);\r\n  const getWeather = async () => {\r\n    //Protect API Key \r\n    const appid = process.env.REACT_APP_WEATHER_API_KEY;\r\n    let res = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&lang=en&appid=${appid}`\r\n    );\r\n\r\n    //return weather as json\r\n    let weather = await res.json();\r\n    setWeather(weather);\r\n    console.log(weather);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather();\r\n    return () => {}; //empty cleanup function\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <div className=\"weather main-info\">\r\n          <>\r\n            <div className=\"city\">{city.toUpperCase()}</div>\r\n            {weather.weather && (\r\n              <>\r\n                <div>{weather.weather[0].description.toUpperCase()}</div>\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n                  alt=\"Weather Icon\"\r\n                />\r\n              </>\r\n            )}\r\n            {weather.main && <div className=\"current-temp\">{weather.main.temp} F</div>}\r\n          </>\r\n        </div>\r\n\r\n        <div className=\"weather secondary-info\">\r\n          <>\r\n            {weather.main && (\r\n              <>\r\n                <div>Feels Like: {weather.main.feels_like} F</div>\r\n                <div>Humidity: {weather.main.humidity} %</div>\r\n              </>\r\n            )}\r\n            {weather.wind && <div>Wind Speed: {weather.wind.speed} MPH</div>}\r\n          </>\r\n        </div>\r\n        <input className=\"\" placeholder=\"Enter a different city\"></input>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Weather from './Weather';\r\n\r\n\r\nReactDOM.render(\r\n    <Weather />, document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}